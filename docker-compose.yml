services:
  # Nginx Reverse Proxy - Single entry point
  nginx:
    image: nginx:alpine
    container_name: apm-nginx
    ports:
      - "5000:80"  # Only exposed port
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - kibana
      - apm-server
      - elasticsearch
    networks:
      - apm-network

  # APM Stack (all internal only)
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: apm-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - apm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: apm-kibana
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
    ports:
      - "5601:5601"  # Temporarily expose Kibana directly
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - apm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  apm-server:
    image: docker.elastic.co/apm/apm-server:8.11.0
    container_name: apm-server
    environment:
      - output.elasticsearch.hosts=http://elasticsearch:9200
      - apm-server.host=0.0.0.0:8200
      - apm-server.rum.enabled=true
      - setup.kibana.host=kibana:5601
      - setup.template.enabled=true
      - logging.level=info
    depends_on:
      elasticsearch:
        condition: service_healthy
    networks:
      - apm-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8200/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Test Symfony Application
  symfony-app:
    build:
      context: .
      dockerfile: Dockerfile.symfony
    container_name: symfony-test-app
    volumes:
      - .:/var/www/html/vendor/coding9/elastic-apm-symfony-bundle
      - ./test-symfony:/var/www/html
    environment:
      - ELASTIC_APM_ENABLED=true
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=symfony-test-app
      - ELASTIC_APM_SERVICE_VERSION=1.0.0
      - ELASTIC_APM_SECRET_TOKEN=
      - APP_ENV=dev
      - DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db
      - MESSENGER_TRANSPORT_DSN=redis://redis:6379/messages
    depends_on:
      apm-server:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - apm-network

  # Redis for Symfony Messenger
  redis:
    image: redis:7-alpine
    container_name: apm-redis
    networks:
      - apm-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Symfony Messenger Worker
  messenger-worker:
    build:
      context: .
      dockerfile: Dockerfile.symfony
    container_name: symfony-messenger-worker
    volumes:
      - .:/var/www/html/vendor/coding9/elastic-apm-symfony-bundle
      - ./test-symfony:/var/www/html
    environment:
      - ELASTIC_APM_ENABLED=true
      - ELASTIC_APM_SERVER_URL=http://apm-server:8200
      - ELASTIC_APM_SERVICE_NAME=symfony-messenger-worker
      - ELASTIC_APM_SERVICE_VERSION=1.0.0
      - ELASTIC_APM_SECRET_TOKEN=
      - APP_ENV=dev
      - DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db
      - MESSENGER_TRANSPORT_DSN=redis://redis:6379/messages
    command: php bin/console messenger:consume async -vv
    depends_on:
      apm-server:
        condition: service_healthy
      redis:
        condition: service_healthy
      symfony-app:
        condition: service_started
    restart: unless-stopped
    networks:
      - apm-network

  # Original PHP test containers
  php:
    build: .
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

  php74:
    image: php:7.4-cli
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

  php80:
    image: php:8.0-cli
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

  php81:
    image: php:8.1-cli
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

  php82:
    image: php:8.2-cli
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

  php83:
    image: php:8.3-cli
    volumes:
      - .:/app
    working_dir: /app
    command: tail -f /dev/null
    networks:
      - apm-network

volumes:
  elasticsearch-data:

networks:
  apm-network:
    driver: bridge