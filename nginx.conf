events {
    worker_connections 1024;
}

http {
    # Define upstreams with resolver for DNS
    resolver 127.0.0.11 valid=30s;  # Docker's internal DNS

    server {
        listen 80;
        server_name localhost;

        # Health check endpoint (always available)
        location /health {
            access_log off;
            return 200 "OK\n";
            add_header Content-Type text/plain;
        }

        # Service status page (always available)
        location /status {
            default_type text/html;
            return 200 '<html>
<head><title>APM Test Environment</title></head>
<body style="font-family: Arial, sans-serif; margin: 40px;">
    <h1>APM Test Environment Status</h1>
    <p>All services accessible through port 5000:</p>
    <ul>
        <li><a href="/">Symfony Test App</a> - Main application</li>
        <li><a href="/kibana/">Kibana Dashboard</a> - APM monitoring UI</li>
        <li><a href="/apm/">APM Server Status</a> - APM data collector</li>
        <li><a href="/elasticsearch/_cluster/health?pretty">Elasticsearch Health</a> - Data store</li>
    </ul>
    <h2>Test Endpoints:</h2>
    <ul>
        <li><a href="/fast">/fast</a> - Fast endpoint with spans</li>
        <li><a href="/slow">/slow</a> - Slow endpoint (3 seconds)</li>
        <li><a href="/error">/error</a> - Error test endpoint</li>
        <li><a href="/queue/test">/queue/test</a> - Send test message</li>
        <li><a href="/spans">/spans</a> - Custom spans demo</li>
        <li><a href="/memory">/memory</a> - Memory test</li>
    </ul>
</body>
</html>';
        }

        # Symfony App (default)
        location / {
            set $upstream symfony-app;
            proxy_pass http://$upstream:80;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Handle connection errors
            proxy_connect_timeout 5s;
            proxy_send_timeout 10s;
            proxy_read_timeout 10s;
            
            error_page 502 503 504 /503.html;
        }

        # Kibana
        location /kibana/ {
            set $upstream kibana;
            proxy_pass http://$upstream:5601/kibana/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Kibana specific settings
            proxy_redirect off;
            proxy_buffering off;
            
            # Handle WebSocket upgrades
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            error_page 502 503 504 /503.html;
        }
        
        location /kibana {
            return 301 /kibana/;
        }

        # APM Server API
        location /apm/ {
            set $upstream apm-server;
            proxy_pass http://$upstream:8200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # APM specific settings
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            
            # Allow large payloads for APM data
            client_max_body_size 10m;
            client_body_buffer_size 1m;
            
            error_page 502 503 504 /503.html;
        }

        # Elasticsearch API (for debugging)
        location /elasticsearch/ {
            set $upstream elasticsearch;
            proxy_pass http://$upstream:9200/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # ES specific settings
            proxy_http_version 1.1;
            proxy_set_header Connection "Keep-Alive";
            proxy_set_header Proxy-Connection "Keep-Alive";
            
            error_page 502 503 504 /503.html;
        }

        # Error page for when services are down
        location = /503.html {
            default_type text/html;
            return 503 '<html>
<head><title>Service Unavailable</title></head>
<body style="font-family: Arial, sans-serif; margin: 40px;">
    <h1>Service Temporarily Unavailable</h1>
    <p>The service is still starting up. Please wait a moment and refresh the page.</p>
    <p><a href="/status">Check Status Page</a></p>
</body>
</html>';
        }
    }
}