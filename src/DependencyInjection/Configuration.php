<?php

namespace ElasticApmBundle\DependencyInjection;

use Symfony\Component\Config\Definition\Builder\TreeBuilder;
use Symfony\Component\Config\Definition\ConfigurationInterface;

class Configuration implements ConfigurationInterface
{
    public function getConfigTreeBuilder(): TreeBuilder
    {
        $treeBuilder = new TreeBuilder('elastic_apm');
        $rootNode = $treeBuilder->getRootNode();

        $rootNode
            ->children()
                ->booleanNode('enabled')
                    ->defaultTrue()
                    ->info('Enable or disable APM tracking')
                ->end()
                ->scalarNode('interactor')
                    ->defaultValue('elastic_apm')
                    ->info('The interactor service to use (elastic_apm, opentracing, blackhole, adaptive)')
                ->end()
                ->booleanNode('logging')
                    ->defaultFalse()
                    ->info('Enable debug logging for APM operations')
                ->end()
                ->arrayNode('server')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('url')
                            ->defaultValue('http://localhost:8200')
                            ->info('APM server URL')
                        ->end()
                        ->scalarNode('secret_token')
                            ->defaultNull()
                            ->info('APM server secret token')
                        ->end()
                        ->scalarNode('api_key')
                            ->defaultNull()
                            ->info('APM server API key')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('opentracing')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('jaeger_endpoint')
                            ->defaultNull()
                            ->info('Jaeger collector endpoint (http://localhost:14268/api/traces)')
                        ->end()
                        ->scalarNode('zipkin_endpoint')
                            ->defaultNull()
                            ->info('Zipkin collector endpoint (http://localhost:9411/api/v2/spans)')
                        ->end()
                        ->enumNode('format')
                            ->values(['jaeger', 'zipkin', 'otlp'])
                            ->defaultValue('jaeger')
                            ->info('OpenTracing export format')
                        ->end()
                        ->booleanNode('b3_propagation')
                            ->defaultTrue()
                            ->info('Enable B3 trace propagation')
                        ->end()
                        ->booleanNode('w3c_propagation')
                            ->defaultTrue()
                            ->info('Enable W3C trace context propagation')
                        ->end()
                        ->booleanNode('jaeger_propagation')
                            ->defaultTrue()
                            ->info('Enable Jaeger trace propagation')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('service')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->scalarNode('name')
                            ->defaultValue('ah-portal-api')
                            ->cannotBeEmpty()
                            ->info('Service name')
                        ->end()
                        ->scalarNode('version')
                            ->defaultValue('1.0.0')
                            ->info('Service version')
                        ->end()
                        ->scalarNode('environment')
                            ->defaultValue('%kernel.environment%')
                            ->info('Service environment')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('transactions')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->floatNode('sample_rate')
                            ->defaultValue(1.0)
                            ->min(0.0)
                            ->max(1.0)
                            ->info('Transaction sample rate (0.0 to 1.0)')
                        ->end()
                        ->integerNode('max_spans')
                            ->defaultValue(1000)
                            ->min(0)
                            ->info('Maximum spans per transaction')
                        ->end()
                        ->enumNode('naming_strategy')
                            ->values(['route', 'controller', 'uri', 'service', 'message'])
                            ->defaultValue('route')
                            ->info('Transaction naming strategy (route, controller, uri, service, message)')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('exceptions')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultTrue()
                            ->info('Capture exceptions')
                        ->end()
                        ->arrayNode('ignored_exceptions')
                            ->scalarPrototype()->end()
                            ->defaultValue([])
                            ->info('List of exception classes to ignore')
                        ->end()
                        ->booleanNode('unwrap_exceptions')
                            ->defaultFalse()
                            ->info('Unwrap wrapped exceptions')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('memory')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('track_usage')
                            ->defaultFalse()
                            ->info('Track memory usage')
                        ->end()
                        ->scalarNode('usage_label')
                            ->defaultValue('memory_usage')
                            ->info('Label for memory usage tracking')
                        ->end()
                    ->end()
                ->end()
                ->booleanNode('track_deprecations')
                    ->defaultFalse()
                    ->info('Track PHP deprecations')
                ->end()
                ->booleanNode('track_warnings')
                    ->defaultFalse()
                    ->info('Track PHP warnings')
                ->end()
                ->arrayNode('messaging')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultTrue()
                            ->info('Enable APM tracking for message processing')
                        ->end()
                        ->booleanNode('auto_instrument_handlers')
                            ->defaultFalse()
                            ->info('Automatically instrument message handlers with APM decorators')
                        ->end()
                        ->arrayNode('ignored_transports')
                            ->scalarPrototype()->end()
                            ->defaultValue([])
                            ->info('List of transport names to ignore for APM tracking')
                        ->end()
                        ->arrayNode('ignored_message_classes')
                            ->scalarPrototype()->end()
                            ->defaultValue([])
                            ->info('List of message classes to ignore for APM tracking')
                        ->end()
                        ->booleanNode('track_message_data')
                            ->defaultTrue()
                            ->info('Include message data in APM traces (may contain sensitive information)')
                        ->end()
                    ->end()
                ->end()
                ->arrayNode('rum')
                    ->addDefaultsIfNotSet()
                    ->children()
                        ->booleanNode('enabled')
                            ->defaultFalse()
                            ->info('Enable RUM (Real User Monitoring) - WARNING: Exposes service config via API')
                        ->end()
                        ->booleanNode('expose_config_endpoint')
                            ->defaultFalse()
                            ->info('Enable /api/apm/rum-config endpoint - SECURITY RISK: Exposes internal configuration')
                        ->end()
                        ->scalarNode('service_name')
                            ->defaultValue('ah-portal-frontend')
                            ->info('RUM service name (public)')
                        ->end()
                        ->scalarNode('server_url')
                            ->defaultNull()
                            ->info('RUM server URL (exposed to frontend)')
                        ->end()
                    ->end()
                ->end()
            ->end();

        return $treeBuilder;
    }
}